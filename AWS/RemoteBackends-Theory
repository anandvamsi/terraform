Terraform supports various types of remote backends which can be used to store state data.
As of now, we storing state date in local and GIT repository
Depending on remote backends which is being used, there can few features

- Standard backend:- state Storage Locking
- Enhanced Backed Types :- All features + Remote Management 

Issues without remote backends
---------------------------------
Concurrency: If 2 or more developers are working in the stack, they won’t see the other state until it’s pushed to the repository

Automated Deployment: A CI tool that deploys the stack automatically would need to commit the new state file to the repository

Easily corruptible: In case of a merge conflict or human error, the state file can be corrupted or gone. If this happens, the stack becomes unmaintainable,
resources need to be manually/individually imported or cleaned and then re-created with terraform




Using backed s3
---------------------
provider "aws" {
region = "us-east-1"
}
terraform {
        backend  "s3" {
        bucket = "testanand12343"
        region = "us-east-1"
        key =  "newdata"
        }
}

Understanding State Lock
-------------------------
Whenever you are performing write operation,terraform would lock the state file.
THis is very important as otherwise during your onging terraform apply operations,if others also try for the same,it would corrupt your state file.

Example;-
Person A is terminating the RDS resource which has associated rds file.
Person B has now tried resizing the same RDS resource at the same time.

show them:- for Same code do terraform plan in two windows


Intergration with DynamoDB Locking 
-----------------------------------
Step1
- Create  table in DynamoDB
  - create a PrimaryKey :- LockID
  
Step2 
terraform {
  backend  "s3" {
  bucket = "<bucketname>"
  region = "" 
  accesskey =
  secreatkey  =     
  dynamodb_table = <Mention the one created in the step1>  
   }
 }

step3
  terraform init
  
step4:
    terraform plan
    Now check the dynamo DB table ;- There will be entry which wil added on.



>>Execute the terraform plan in two consoles at the same time you will see an error :-

end# terraform plan
Acquiring state lock. This may take a few moments...

Error: Error locking state: Error acquiring the state lock: ConditionalCheckFailedException: The conditional request failed
Lock Info:
  ID:        779225df-54f6-3d78-3941-a2cea19c699d
  Path:      testanand12343/newdata
  Operation: OperationTypePlan
  Who:       root@ubuntu-master
  Version:   0.14.5
  Created:   2021-10-28 06:11:25.048685137 +0000 UTC
  Info:


Terraform acquires a state lock to protect the state from being written
by multiple users at the same time. Please resolve the issue above and try
again. For most commands, you can d
