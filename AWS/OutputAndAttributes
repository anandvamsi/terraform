Output 
output variables as a way to organize data to be easily queried and shown back to the Terraform user.
Outputs are a way to tell Terraform what data is important. 
This data is outputted when apply is called, and can be queried using the terraform output command.

Understanding Attributes and output values of terraform
----------------------------------------------------
output are values generated after creating the resources
- more like public IP of the instances

Attributes are more like output will used in next part.
- it can act as the input for the next resource creation

Terraform document will have the "Attribute Reference" which will show the attributes a

>>>
provider "aws" {
region = "us-west-2"
}

resource "aws_eip" "new" {
vpc = true
}

output "myip" {
value = aws_eip.new.public_ip
        }
<<

This will display the attribute public_ip associated with EIP
if we can display all the attributes 

change the code to >>

output "myip" {
value = aws_eip.new
        }
<<<<

Outputs:

myip = {
  "address" = tostring(null)
  "allocation_id" = tostring(null)
  "associate_with_private_ip" = tostring(null)
  "association_id" = ""
  "carrier_ip" = ""
  "customer_owned_ip" = ""
  "customer_owned_ipv4_pool" = ""
  "domain" = "vpc"
  "id" = "eipalloc-05d53a015f9ec3f68"
  "instance" = ""
  "network_border_group" = "us-west-2"
  "network_interface" = ""
  "private_dns" = tostring(null)
  "private_ip" = ""
  "public_dns" = "ec2-44-233-215-162.us-west-2.compute.amazonaws.com"
  "public_ip" = "44.233.215.162"
  "public_ipv4_pool" = "amazon"
  "tags" = tomap(null) /* of string */
  "tags_all" = tomap({})
  "timeouts" = null /* object */
  "vpc" = true
}


##Code with attribute apply to Another resources

provider "aws" {
region = "us-west-2"
}

resource "aws_eip" "new" {
        vpc = true
}

resource "aws_security_group" "allow_tls" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic"
   vpc_id = "vpc-XXXXXXX" ------> Add this if you have different VPC
   ingress  {
      description      = "TLS from VPC"
      from_port        = 443
      to_port          = 443
      protocol         = "tcp"
      cidr_blocks      = ["${aws_eip.new.public_ip}/32"] ------> we have use this legacy syntax in the newer version also.
    }
}


#Printing the values
output "myip" {
value = aws_eip.new.public_ip
        }

output "SG" {
value = aws_security_group.allow_tls.id
}
~ 
