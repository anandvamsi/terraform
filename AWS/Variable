Notes;-
If you have variables with undefined values, it will not directly result into
any error.
Terraform will ask you the values associated with them


Environment varaibles
must start with TF_VAR
- examples export TF_VAR_region=us-west-1
- examples export TF_ami


variables Definition Precedence
-------------------------------------

Terraform loads varibles in the following order, which later sources taking
procedence over ealier ones;
- Environment variables
- The terraform.tfvars if present
- terraform.tfvars.json fle if present
- Any *.auto.tfvars or *.auto.tfvars.json processed in lexical order of their
filenames
- Any -var and -var-file options on the command-line in the oder they are provdider// Highest

>>>>>>>>>>>>>>>>>>>>>
Using variables

provider "aws" {
region = "us-east-1"
}

variable "username" {
description = "Name of the user"
default = "anandvamsi"

}

resource "aws_iam_user" "user" {
    name  = var.username
tags = {
    group = "admins"
      }
}

>> 
This will create a iam user with name anandvamsi
Notes:-

The name of a variable can be any valid identifier except the following:
source, version, providers, count, for_each, lifecycle, depends_on, locals.


Different Methods we can define variables
-------------------------------------------
Command-line flags
terraform apply -var 'region=us-east-1'

From a file
To persist variable values, create a file and assign variables within this file. Create a file named terraform.tfvars with the following contents:
region = "us-east-1"

terraform apply \
  -var-file="secret.tfvars" \
  -var-file="production.tfvars"
From environment varibles
Terraform will read environment variables in the form of TF_VAR_name to find the value for a variable. For example, the TF_VAR_region variable can be set in the shell to set the region variable in Terraform.

UI input
If you execute terraform apply with any variable unspecified, 
Terraform will ask you to input the values interactively. These values are not saved, but this provides a convenient workflow when getting started with Terraform. UI input is not recommended for everyday use of Terraform.



usecase:: when you want to variables for different environment
--------------------------------------
// For development
terraform apply -var-file="dev.tfvars"

// For test
terraform apply -var-file="test.tfvars"
